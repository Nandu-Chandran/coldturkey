name: Test Framework CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build test framework
      run: docker compose build test-framework
      
    - name: Start services
      run: docker compose up -d
      
    - name: Wait for services
      run: |
        echo "Waiting for services to be ready..."
        # Wait for httpbin
        for i in {1..30}; do
          if curl -f http://localhost:8080/get > /dev/null 2>&1; then
            echo "httpbin is ready"
            break
          fi
          echo "Waiting for httpbin... attempt $i"
          sleep 2
        done
        
        # Wait for RabbitMQ
        for i in {1..30}; do
          if curl -f http://localhost:15672 > /dev/null 2>&1; then
            echo "RabbitMQ is ready"
            break
          fi
          echo "Waiting for RabbitMQ... attempt $i"
          sleep 2
        done
        
        # Show service status
        docker compose ps
      
    - name: Run all tests
      run: docker compose run --rm test-framework
      
    - name: Run mock tests
      run: docker compose run --rm test-runner-mock
      
    - name: Generate Allure report
      run: |
        docker compose run --rm test-framework allure generate allure-results --clean -o allure-report
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          allure-results/
          allure-report/
          reports/
        retention-days: 30
        
    - name: Upload Allure report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: allure-report
        path: allure-report/
        retention-days: 30

  test-matrix:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test-type: [mock, external, unit]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build test framework
      run: docker compose build test-framework
      
    - name: Start services
      run: docker compose up -d
      
    - name: Run ${{ matrix.test-type }} tests
      run: |
        case "${{ matrix.test-type }}" in
          "mock")
            docker compose run --rm test-runner-mock
            ;;
          "external")
            docker compose run --rm test-runner-external
            ;;
          "unit")
            docker compose run --rm test-framework pytest -v -m unit
            ;;
        esac
        
    - name: Upload ${{ matrix.test-type }} results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: ${{ matrix.test-type }}-test-results
        path: |
          allure-results/
          reports/
        retention-days: 7

  security-scan:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
        
    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'